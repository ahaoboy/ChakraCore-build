name: build

permissions:
  contents: write

on:
  push:
  pull_request:

defaults:
  run:
    shell: bash --noprofile --norc -CeEuo pipefail {0}

jobs:
  build:
    strategy:
      matrix:
        include:
          - target: x86_64-apple-darwin
            os: macos-13
          - target: aarch64-apple-darwin
            os: macos-latest
          # - target: x86_64-pc-windows-gnu
          #   os: windows-latest
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-24.04
    runs-on: ${{ matrix.os }}
    name: build-${{ matrix.target }}
    steps:
      - uses: actions/checkout@v4
      # - uses: msys2/setup-msys2@v2
      #   if: matrix.os == 'windows-latest'
      #   with:
      #     msystem: MINGW64
      #     update: true
      #     path-type: inherit
      #     install: >-
      #       mingw-w64-x86_64-make
      #       mingw-w64-x86_64-cmake
      #       mingw-w64-x86_64-gcc
      #       mingw-w64-x86_64-clang
      #       mingw-w64-x86_64-perl
      #       mingw-w64-x86_64-python3
      #       zip
      #       unzip
      #       curl
      #       wget
      - name: install-${{ matrix.target }}
        if: startsWith(matrix.os, 'ubuntu')
        shell: "bash"
        run: |
          sudo apt-get install -y git build-essential cmake clang libicu-dev

      - name: install-${{ matrix.target }}
        if: startsWith(matrix.os, 'macos')
        shell: "bash"
        run: |
          brew install cmake icu4c

      - name: install-${{ matrix.target }}
        if: matrix.os == 'ubuntu-24.04'
        shell: "bash"
        run: |
          sudo apt-get install -y git build-essential cmake clang libicu-dev

      - name: build-${{ matrix.target }}
        if: matrix.os != 'windows-latest'
        shell: "bash"
        run: |
          bash build.sh ${{ matrix.target }}

      # - name: build-windows
      #   if: matrix.os == 'windows-latest'
      #   shell: msys2 {0}
      #   run: |
      #     bash build.sh ${{ matrix.target }}

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: ch-${{ matrix.target }}
          path: ./ch-${{ matrix.target }}.tar.gz
  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: ch
          pattern: ch*
          merge-multiple: true

      - name: release
        if: startsWith(github.ref, 'refs/tags/')
        uses: ncipollo/release-action@v1
        with:
          artifacts: "ch/*.tar.gz"
